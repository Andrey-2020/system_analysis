openapi: 3.0.0
x-stoplight:
  id: qayq6uwh5oi0j
info:
  title: Traineeship system
  version: 1.0.0
paths:
  /api/users/:
    get:
      summary: Получение списка пользователей
      operationId: Список пользователей
      description: Выдача всех пользователей для отображения на странице поиска. Доступно ментору, руководителю стажировки и администратору.
      parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
        - name: author
          required: false
          in: query
          description: Показывать пользователей с указанным ФИО
          schema:
            type: string
      security:
        - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAD'
          description: Список пользователей
      tags:
        - Пользователи
    post:
      summary: Регистрация кандидата в системе
      operationId: Регистрация пользователя
      description: Администратор регистрирует кандидата в системе.
      parameters: []
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserCreate'
          description: Пользователь успешно создан
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      tags:
        - Пользователи
  /api/users/me/:
    get:
      summary: Текущий пользователь
      operationId: Текущий пользователь
      description: Получение профиля текущего пользователя для отображения на странице
      parameters: []
      security:
        - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Пользователи
  /api/users/candidates/:
    get:
      summary: Список кандидатов на стажировку
      operationId: Все кандидаты
      description: 'Получение списка кандидатов на стажировку, отфильтрованного по id стажировки. Доступен ментору и администратору.'
      parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
        - name: traineeship_id
          required: true
          in: query
          description: Уникальный идентификатор стажировки. Нужен для фильтрации.
          schema:
            type: string
      security:
        - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormsDecisionsList'
              examples:
                Example 1:
                  value:
                    count: 100
                    next: 'http://internship.example.org/api/users/candidates/?page=4'
                    previous: 'http://internship.example.org/api/users/candidates/?page=2'
                    results:
                      - info:
                          id: 0
                          username: '79000000000'
                          first_name: Вася
                          last_name: Пупкин
                          middle_name: Алибабаевич
                          address: string
                          birthday: '2009-06-06'
                          email: user@example.com
                        tasks:
                          - id: 0
                            username: string
                            traineeship_id: 0
                            questios_id: 0
                            answer_text/link: 'https://docs.google.com/document/u/0/'
                        status_from_supervisor:
                          status: Нет статуса. Кандидата не проверял руководитель стажировки
                          description: None
                        status_from_SS:
                          status: Нет статуса. Кандидат не отправлялся в СБ
                          description: None
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Пользователи
  '/api/users/candidates/{id}/':
    patch:
      summary: Обновление статуса кандидата
      operationId: Добавить статус от руководителя стажировки
      description: Добавление статуса кандидату (query parameters - username) по итогам проверки вступительного задания и ознакомления с информацией о кандидате. Доступно только руководителю стажировки.
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера.
          schema:
            type: string
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FormsDecisionsUpdate'
            examples: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/FormsDecisions'
              examples:
                Example 1:
                  value:
                    info:
                      id: 0
                      username: '79000000000'
                      first_name: Вася
                      last_name: Пупкин
                      middle_name: Алибабаевич
                      address: string
                      birthday: '2009-06-06'
                      email: user@example.com
                    tasks:
                      - id: 0
                        username: string
                        traineeship_id: 0
                        questios_id: 0
                        answer_text/link: 'https://docs.google.com/document/u/0/'
                    status_from_supervisor:
                      status: Одобрено
                      description: string
                    status_from_SS:
                      status: Нет статуса. Кандидат не отправлялся в СБ
                      description: None
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Пользователи
  '/api/users/{id}/':
    get:
      summary: Получение профиля
      operationId: Профиль пользователя
      description: Получение профиля пользователя по id. Доступно только авторизованным пользователям
      security:
        - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный id этого пользователя
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Пользователи
  '/api/users/{id}/role/':
    post:
      summary: Добавить пользователю роль
      operationId: Роль
      description: Доступно только руководителю стажировки и администратору. Администратор назначает руководителя стажировки. Руководитель стажировки назначает стажеров и менторов на свою стажировку
      security:
        - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор этого пользователя.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                traineeship_id:
                  type: integer
                role:
                  type: string
                  description: Роль пользователя
                  example: Стажер
                  enum:
                    - Стажер
                    - Ментор
                    - Руководитель стажировки
                    - Администратор
              required:
                - username
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Подписка успешно создана
        '400':
          description: 'Ошибка назначения роли (Например, если роль уже назначена)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Управление стажерами и менторами
  '/api/users/{id}/matching/':
    post:
      summary: Назначить стажера под конкретного ментора
      operationId: Назначить стажеру ментора
      description: Доступно только руководителю стажировки
      security:
        - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternWithMentor'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intern'
          description: Подписка успешно создана
        '400':
          description: 'Ошибка назначения ментора (Например, если стажеру для данной стажировки уже назначен ментор)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Управление стажерами и менторами
  /api/projects/:
    get:
      summary: 'Все шаблоны лендингов, форм и программ стажировок'
      operationId: Конструктор
      description: Получить шаблоны лендингов. Доступно только администратору.
      security:
        - Token:
            - admin
        - Token: []
      parameters:
        - name: purpose
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: string
            enum:
              - Только форма
              - Анонс
              - Программа стажировки
        - name: addnewpage
          required: false
          in: query
          description: Создать новую страницу?
          schema:
            type: boolean
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates'
          description: Все шаблоны страницы
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Конструктор
  '/api/projects/{projectid}/':
    get:
      summary: Получить шаблон проекта
      operationId: Шаблон проекта
      description: Получить шаблон проекта
      security:
        - Token:
            - admin
        - Token: []
      parameters:
        - name: purpose
          required: true
          in: query
          description: 'Цель использования конструктора. Создание формы, анонса или программы стажировки?'
          schema:
            type: string
            enum:
              - Только форма
              - Анонс
              - Программа стажировки
        - name: projectid
          in: path
          required: true
          description: Уникальный индентификатор проекта
          schema:
            type: integer
        - name: addnewpage
          required: false
          in: query
          description: Создать новую страницу?
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: 'Сообщение содержит HTML-разметку, а также необходимые библиотеки CSS-стилей и библиотеки JS-модулей.'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Конструктор
    post:
      summary: 'Создать анонс, форму или программу стажировки'
      operationId: Создать анонс стажировки
      description: Создать анонс стажировки в конструкторе
      security:
        - Token:
            - admin
      parameters:
        - name: purpose
          required: true
          in: query
          description: 'Цель использования конструктора. Создание формы, анонса или программы стажировки?'
          schema:
            type: string
            enum:
              - Только форма
              - Анонс
              - Программа стажировки
        - name: projectid
          in: path
          required: true
          description: Уникальный индентификатор проекта
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementsResponseOnCreate'
          description: ' Анонс стажировки успешно создан. Данный пример показывает ответ на запрос с параметром purpose = "Анонс". В сообщении содержится ссылка на лендинг.'
        '400':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ValidationError'
                example:
                  block:
                    - Блок "form" с id "668483038" содержит недопустимые значения
          description: Невозможно обработать запрос
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Конструктор
  '/api/announcements/{id}/':
    get:
      summary: Получение страницы анонса стажировки
      operationId: Получение лендинга
      description: Получение страницы анонса стажировки для отправки завки
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор анонса
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Анонсы
    post:
      summary: Отправка заявки на стажировку
      operationId: Отклик
      description: Отклик на стажировку путем заполнения и отправки формы на сайте
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор анонса
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Candidate'
                - $ref: '#/components/schemas/IntroductoryTasks'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Уникальный юзернейм
                    pattern: '^(7+([0-9]){10})$'
                    maxLength: 150
                    example: '79000000000'
                  message:
                    type: string
                    description: Уведомление
                    example: Ваш отклик успешно зарегистрирован
          description: Отклик успешно отправлен
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          $ref: '#/components/responses/ConflictError'
      tags:
        - Анонсы
  '/api/traineeships/{traineeship_id}/lectures/':
    get:
      summary: Получить все лекции
      operationId: Список лекций
      description: 'Список всех лекций для конкретной стажировки. Доступно стажеру, ментору, руководителю стажировки. Стажер по атрибуду date_lecture может узнать когда следующая лекция.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturesList'
          description: Список лекций
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Лекции
    post:
      summary: Создать новую лекцию
      operationId: Создание лекции
      description: Создание лекций доступно только руководителю стажировки. Дополнить её информацией может и ментор.
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LecturesCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LecturesMinified'
          description: Рецепт успешно создан
        '400':
          description: Ошибки валидации в стандартном формате DRF
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ValidationError'
                example:
                  name:
                    - Обязательное поле.
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Лекции
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/':
    get:
      summary: Зайти в карточку лекции
      operationId: Получение лекции
      description: 'Перейти в карточку лекции для просмотра материалов. Доступно стажеру, ментору, руководителю стажировки, администратору.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lectures'
          description: ''
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Лекции
    patch:
      summary: Обновить информацию в лекции
      operationId: Обновление лекции
      security:
        - Token: []
      description: Обновление/Добавление материалов лекции. Доступно только руководителю стажировки и ментору
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LecturesUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lectures'
          description: Лекция успешно обновлена
        '400':
          description: Ошибки валидации в стандартном формате JSF.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ValidationError'
                example:
                  link_presentation:
                    - Содержит некорректные данные.
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Лекции
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks':
    get:
      summary: Получить все домашние задания для данной лекции
      operationId: Список ДЗ
      description: 'Получить все задачи для определенной стажировки. Доступно стажерам, менторам, руководителю стажировки и администратору.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
      responses:
        '200':
          description: Список задач успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworksList'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Домашние задания
    post:
      summary: Создать ДЗ
      operationId: Создать ДЗ
      description: 'Создать домашнее задание. Доступно только руководителю стажировки, ментору и администратору.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworksCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homeworks'
          description: ДЗ успешно создано
        '400':
          description: 'Ошибка добавления ДЗ к лекции (Например, когда такое ДЗ в лекции уже существует)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Домашние задания
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks/{id}/':
    get:
      summary: Получить конкретное ДЗ
      operationId: ДЗ
      description: 'Получить ДЗ по его id. Доступно стажеру, ментору, руководителю стажировки.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
      responses:
        '200':
          description: ДЗ успешно получено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homeworks'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Домашние задания
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks/{homework_id}/decisions/':
    post:
      summary: Прикрепить решение к ДЗ
      operationId: Отправка решения ДЗ
      description: Отправить решение ДЗ на проверку. Стажер отправляет ссылку на гугл-документ с решением. Доступно только старжеру.
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: homework_id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworksDecisionsCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworksDecisions'
          description: Рецепт успешно добавлен в список покупок
        '400':
          description: 'Ошибка добавления ДЗ (Например, когда ДЗ уже отправлено)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Домашние задания
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks/{homework_id}/decisions/{id}':
    get:
      summary: Просмотреть решение ДЗ
      operationId: Решение
      description: 'Просмотреть решение домашнего задания конкретного стажера. Доступно только автору решения, руководителю стажировки и менторам.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: homework_id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера (username).
          schema:
            type: string
      responses:
        '200':
          description: Решение ДЗ получено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworksDecisions'
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Домашние задания
    patch:
      summary: Добавить оценку решения ДЗ
      operationId: Add_assessment
      description: Добавление комментария и оценки домашнего задания стажера. Доступно только ментору и руководителю стажировки.
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: homework_id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера (username).
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeworksDecisionsUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/HomeworksDecisions'
                  - $ref: '#/components/schemas/HomeworksDecisionsUpdate'
          description: Лекция успешно обновлена
        '400':
          $ref: '#/components/responses/NestedValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Домашние задания
  /api/traineeships/liga-security/:
    get:
      summary: Обновить статус кандидата
      operationId: Запросить статусы
      security:
        - Token: []
      description: Получить статусы проверки кандидатов в СБ. Доступно только администратору.
      parameters:
        - name: id
          in: query
          required: true
          description: Уникальный идентификатор кандидата.
          schema:
            type: string
      responses:
        '200':
          description: Список со статусами кандидатов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LigaSecurityResponses'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      tags:
        - Служба безопасности
    post:
      summary: Отправить кандидата в СБ
      operationId: Отправить кандидата в СБ
      description: Отправить кандидата на проверку в СБ. Доступно только администратору.
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LigaSecurityRequests'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
                example: Кандидат отправлен на рассмотрение в СБ...
                description: Ответ от сервера
          description: Информация о кандидате успешно отправлена в СБ
        '400':
          description: 'Ошибка отправки (Например, когда информация о кандидате уже отправлена в СБ)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      tags:
        - Служба безопасности
  /api/traineeships/hr/employees:
    post:
      summary: Отправить информацию о стажере в HR
      operationId: HR
      description: 'Отправить информацию в HR о стажере, которого нужно взять в штат. Доступно только руководителю стажировки.'
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HrRequests'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
                example: Информация о стажере отправлена на оформление в HR...
                description: Ответ от сервера
          description: Информация о стажере успешно отправлена в HR
        '400':
          description: 'Ошибка подписки (Например, если запрос уже отправили)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - HR
  /api/traineeships/:
    post:
      summary: Создать стажировку
      operationId: Создание стажировки
      description: Создание стажировки доступно только администратору
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraineeshipsCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
                example: 'Новая стажировка с названием "{title}" создана'
                description: Ответ от сервера
          description: Стажировка успешно создана
        '400':
          description: 'Ошибка подписки (Например, если уже подписан или при подписке на себя самого)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Стажировка
  '/api/traineeships/{traineeship_id}/':
    patch:
      summary: Добавить руководителя стажировки
      operationId: Назначение руководителя
      description: После создания стажировки администратор должен назничить руководителя через поиск по ФИО. После чего id нового администратора добавляестся в таблицу со стажировками
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraineeshipsCreateUpdate'
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/TraineeshipsCreate'
                  - $ref: '#/components/schemas/TraineeshipsCreateUpdate'
          description: Стажировка успешно создана
        '400':
          description: 'Ошибка назначения (Например, если id руководителя не существует)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Стажировка
  '/api/traineeships/{traineeship_id}/programs/{id}/':
    get:
      security:
        - Token: []
      summary: Скачать программу стажировки
      operationId: Скачать програму стажировки
      description: 'Скачать файл с программой стажировки. Это может быть TXT/PDF/CSV. Важно, чтобы контент файла удовлетворял требованиям задания. Доступно стажерам, менторам, руководителю стажировки и админам.'
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор  стажировки.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Стажировка
  /api/auth/token/login/:
    post:
      summary: Получить токен авторизации
      operationId: Получить токен авторизации
      description: 'Используется для авторизации по username и паролю, чтобы далее использовать токен при запросах.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenGetResponse'
          description: ''
      tags:
        - Пользователи
  /api/auth/token/logout/:
    post:
      summary: Удаление токена
      operationId: Удаление токена
      description: Удаляет токен текущего пользователя
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Пользователи
components:
  schemas:
    Candidate:
      description: Полные данные стажера
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Уникальный идентификатор в виде номера телефона
          pattern: '^(7+([0-9]){10})$'
          example: '79000000000'
          maxLength: 15
        first_name:
          type: string
          maxLength: 150
          description: Имя
          example: Вася
        last_name:
          type: string
          maxLength: 150
          description: Фамилия
          example: Пупкин
        middle_name:
          type: string
          maxLength: 150
          description: Отчество
          example: Алибабаевич
        address:
          type: string
          description: Прописка
        birthday:
          type: string
          description: Дата рождения
          example: '2009-06-06'
          format: date
        email:
          type: string
          format: email
          maxLength: 254
          description: Адрес электронной почты
      required:
        - username
        - first_name
        - last_name
        - middle_name
        - address
        - birthday
        - email
      x-stoplight:
        id: q5a5d3tuqz6sv
    IntroductoryTasks:
      description: Решение вступительных задач
      type: object
      properties:
        traineeship_id:
          type: integer
          description: Уникальный id стажировки
        tasks:
          type: array
          description: Список задач
          items:
            type: object
            properties:
              task_id:
                type: integer
                description: Уникальный id задачи
              solution:
                type: string
                description: Текстовое описание решения или ссылка на онлайн ресурс с решением
                example: 'https://docs.google.com/document/u/0/'
      required:
        - tasks
      x-stoplight:
        id: nf7ijiig9xr7d
    User:
      description: Текущий пользователь для отображения в ЛК
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Candidate'
        role:
          type: string
          description: Роль пользователя в системе
          example: Стажер
      required:
        - username
      x-stoplight:
        id: qcweyjbn1jnat
    UserAD:
      type: object
      properties:
        count:
          type: integer
          example: 123
          description: Общее количество объектов в базе
        next:
          type: string
          nullable: true
          format: uri
          example: 'http://internship.example.org/api/users/?page=4'
          description: Ссылка на следующую страницу
        previous:
          type: string
          nullable: true
          format: uri
          example: 'http://internship.example.org/api/users/?page=2'
          description: Ссылка на предыдущую страницу
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserSearch'
          description: Список объектов текущей страницы
      x-stoplight:
        id: 9awt556dl9yuq
    Intern:
      description: Полные данные стажера
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Candidate'
        role:
          type: string
          description: Роль пользователя в системе
          example: Стажер
        mentors:
          type: array
          description: Список соответствий стажировка - ментор для конкретного стажера
          items:
            type: object
            properties:
              traineeship_id:
                type: integer
                description: Уникальный id стажировки
              mentor_id:
                type: integer
                description: Уникальный id ментора
      required:
        - username
      x-stoplight:
        id: zbaj17jeuf9aq
    UserSearch:
      description: Пользователь из БД AD
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Уникальный юзернейм в виде номера телефона
          pattern: '^(7+([0-9]){10})$'
          maxLength: 15
        first_name:
          type: string
          maxLength: 150
          description: Имя
          example: Вася
        last_name:
          type: string
          maxLength: 150
          description: Фамилия
          example: Пупкин
        middle_name:
          type: string
          maxLength: 150
          description: Отчество
          example: Алибабаевич
      required:
        - username
      x-stoplight:
        id: r073yipmhqp0x
    InternWithMentor:
      description: Расширенный объект пользователя с рецептами
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        traineeship_id:
          type: integer
        mentor_id:
          type: integer
      x-stoplight:
        id: dit0womviu4k4
    Templates:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: Уникальный id
        count:
          type: integer
          description: Количество шаблонов
        template:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
              description: Уникальный id шаблона
            count:
              type: integer
              description: Количество шаблонов
            template:
              description: Список шаблонов
              type: array
              items:
                $ref: '#/components/schemas/TemplateList'
      required:
        - count
        - template
      x-stoplight:
        id: fv5x8kis98utg
    TemplateList:
      type: object
      properties:
        template_id:
          type: integer
          description: Уникальный id шаблона
        image_ling:
          type: string
          description: Ссылка на изобращение шаблона
          example: 'http://internship.example.org/static/example.jpg'
          format: url
        text:
          description: Описание
          type: string
      required:
        - count
        - template
      x-stoplight:
        id: 3al2xw7dofl3m
    Template:
      type: object
      properties:
        template_id:
          type: integer
          description: Уникальный id шаблона
        html:
          type: string
          description: HTML верстка страницы
          example: <div class="form" >foo-bar</div>
        css-libs:
          type: string
          description: Стиль CSS страницы
          example: test-forms-1.0.css
        js-libs:
          type: string
          description: Скрипт JS для HTML страницы
          example: test-forms-1.0.js
      required:
        - count
        - template
      x-stoplight:
        id: urs1cygd4vegv
    ProjectsCreate:
      type: object
      properties:
        projectid:
          type: integer
        title:
          type: string
          description: Заголовок
          example: Стажировка по системной аналитике
        blocks:
          type: array
          items:
            type: object
            properties:
              'sorts[0]':
                type: object
                description: Блок с определенным порядком
                properties:
                  block_id:
                    type: string
                    description: Уникальный идентификатор блока
                    example: '668483038'
                  changes:
                    type: array
                    description: Список всех изменений элементов блока
                    items:
                      type: object
                      properties:
                        only_this_field:
                          type: string
                          description: Уникальный идентификатор элемента блока
                          example: title
                        block_info:
                          type: string
                          description: Текст элемента
                          example: Заголовок формы
              'sorts[1]':
                type: object
                description: Блок с определенным порядком
                properties:
                  block_id:
                    type: string
                    description: Уникальный идентификатор блока
                    example: '668482970'
                  changes:
                    type: array
                    description: Список всех изменений элементов блока
                    items:
                      type: object
                      properties:
                        only_this_field:
                          type: string
                          description: Уникальный идентификатор элемента блока
                          example: li_title_1
                        block_info:
                          type: string
                          description: Текст элемента
                          example: E-mail
      required:
        - projectid
        - title
        - blocks
      x-stoplight:
        id: v3xsexsmb92ku
    AnnouncementsResponseOnCreate:
      type: object
      properties:
        projectid:
          type: integer
        link:
          type: string
          description: Ссылка на лендинг
          example: 'http://internship.example.org/api/announcements/123/'
          format: url
        publish_onepage:
          type: boolean
          description: Страница уже опубликована в открытом доступе?
          example: true
      required:
        - projectid
        - link
        - publish_onepage
      x-stoplight:
        id: npc1tn8hcwte1
    LecturesMinified:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: Уникальный id
        name:
          type: string
          maxLength: 200
          description: Название лекции
        date_lecture:
          description: Дата проведения лекции по расписанию
          type: string
          example: '2023-11-17'
          format: date
      required:
        - name
        - date_lecture
      x-stoplight:
        id: 1gzlfemeqngmh
    Lectures:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: Уникальный id
        name:
          type: string
          maxLength: 200
          description: Название лекции
        image:
          description: Ссылка на картинку на сайте
          example: 'http://internship.example.org/media/lectures/images/image.jpeg'
          type: string
          format: url
        link_presentation:
          description: Ссылка на презентацию
          example: 'http://internship.example.org/media/lectures/images/presentation.jpeg'
          type: string
          format: url
        link_record:
          description: Ссылка на запись лекции
          example: 'http://internship.example.org/media/lectures/images/record.jpeg'
          type: string
          format: url
        homework_id:
          description: Внешний ключ id для связи с домашней работой
          type: integer
          example: 2
        date_lecture:
          description: Дата проведения лекции по расписанию
          type: string
          example: '2023-11-17'
          format: date
      required:
        - name
        - date_lecture
      x-stoplight:
        id: in07zip1m3uv0
    LecturesList:
      type: array
      description: Список лекций
      items:
        $ref: '#/components/schemas/Lectures'
      x-stoplight:
        id: 39xenapkp4t11
    LecturesCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
          description: Название лекции
        date_lecture:
          description: Дата проведения лекции по расписанию
          type: string
          example: '2023-11-17'
          format: date
      required:
        - name
        - date_lecture
      x-stoplight:
        id: f65d5n18tfx12
    LecturesUpdate:
      type: object
      properties:
        image:
          description: Ссылка на картинку на сайте
          example: 'http://internship.example.org/media/lectures/images/image.jpeg'
          type: string
          format: url
        link_presentation:
          description: Ссылка на презентацию
          example: 'http://internship.example.org/media/lectures/images/presentation.jpeg'
          type: string
          format: url
        link_record:
          description: Ссылка на запись лекции
          example: 'http://internship.example.org/media/lectures/images/record.jpeg'
          type: string
          format: url
        homework_id:
          description: Внешний ключ id для связи с домашней работой
          type: integer
          example: 2
      required:
        - link_presentation
        - link_record
      x-stoplight:
        id: 5q8yl2ojnf21j
    Homeworks:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
          example: Капуста
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
        lecture_id:
          type: integer
          description: Уникальный идентификатор лекции
        homework_text:
          type: string
          description: Описание ДЗ
          example: Овощ
        image:
          description: Ссылка на картинку для ДЗ
          example: 'http://internship.example.org/media/lectures/images/DZ.jpeg'
          type: string
          format: url
        homework_list:
          type: array
          description: Список с задачами
          items:
            type: object
            properties:
              condition:
                type: string
                description: Текст вопроса ДЗ
                example: Помогает ли капуста от облысения?
              id:
                type: integer
                description: Уникальный идентификатор условия задачи
                example: 1
      required:
        - name
        - measurement_unit
      x-stoplight:
        id: rvczzu20vldkq
    HomeworksList:
      type: array
      description: Список ДЗ
      items:
        $ref: '#/components/schemas/Homeworks'
      x-stoplight:
        id: th9fpte9bdx9m
    HomeworksCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
          example: Капуста
        homework_text:
          type: string
          description: Описание ДЗ
          example: Овощ
        image:
          description: Ссылка на картинку для ДЗ
          example: 'http://internship.example.org/media/lectures/images/DZ.jpeg'
          type: string
          format: url
        homework_list:
          type: array
          description: Список с задачами
          items:
            type: object
            properties:
              condition:
                type: string
                description: Текст вопроса ДЗ
                example: Помогает ли капуста от облысения?
              number:
                type: integer
                description: Номер вопроса
                example: 1
      required:
        - name
        - measurement_unit
      x-stoplight:
        id: likgdjb1m8zzi
    HomeworksDecisions:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Уникальный идентификатор стажера
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
        homework_id:
          type: integer
          description: Уникальный идентификатор ДЗ
        link:
          description: Ссылка на решения ДЗ
          example: 'https://docs.google.com/document/u/0/'
          type: string
          format: url
      required:
        - homework_id
        - link
      x-stoplight:
        id: 1enoxawx52o17
    FormsDecisions:
      type: object
      description: Вся информация о кандидате вместе с его решениями вступительных задач
      properties:
        info:
          $ref: '#/components/schemas/Candidate'
        tasks:
          type: array
          description: Список ответов кандидата
          items:
            properties:
              id:
                type: integer
                readOnly: true
              username:
                type: string
                description: Уникальный идентификатор стажера
              traineeship_id:
                type: integer
                description: Уникальный идентификатор стажировки
              questios_id:
                type: integer
                description: Уникальный идентификатор вопроса формы
              answer_text/link:
                description: Текстовый ответ или ссылка на решение
                example: 'https://docs.google.com/document/u/0/'
                type: string
          required:
            - username
            - traineeship_id
            - questios_id
            - answer_text/link
        status_from_supervisor:
          $ref: '#/components/schemas/FormsDecisionsUpdate'
        status_from_SS:
          type: object
          description: Результаты проверки кандидата руководителем стажировки
          properties:
            status:
              type: string
              description: Cтатус проверки кандидата от службы безопасности
              example: Нет статуса. Кандидат не отправлялся в СБ
            description:
              type: string
              description: Комментарий от СБ
              example: None
      required:
        - info
        - tasks
        - questios_id
        - answer_text/link
      x-stoplight:
        id: kk0zd3tekydnx
      x-examples: {}
    FormsDecisionsUpdate:
      type: object
      description: Результаты проверки кандидата руководителем стажировки
      properties:
        status:
          type: string
          description: Cтатус проверки кандидата от руководителя стажировки
          example: Одобрено
        description:
          type: string
          description: Комментарий от руководителя стажировки
      required:
        - status_from_supervisor
      x-stoplight:
        id: t4gsh6pg7zykq
    FormsDecisionsList:
      type: object
      description: Список кандидатов на стажировку
      properties:
        count:
          type: integer
          example: 100
          description: Общее количество объектов в базе
        next:
          type: string
          nullable: true
          format: uri
          example: 'http://internship.example.org/api/users/candidates/?page=4'
          description: Ссылка на следующую страницу
        previous:
          type: string
          nullable: true
          format: uri
          example: 'http://internship.example.org/api/users/candidates/?page=2'
          description: Ссылка на предыдущую страницу
        results:
          type: array
          items:
            $ref: '#/components/schemas/FormsDecisions'
          description: Список объектов текущей страницы
      required:
        - count
        - next
        - results
      x-stoplight:
        id: kvofk07h0kira
    HomeworksDecisionsCreate:
      type: object
      properties:
        link:
          description: Ссылка на решения ДЗ
          example: 'https://docs.google.com/document/u/0/'
          type: string
          format: url
      required:
        - link
      x-stoplight:
        id: etpxe2h9qjwb7
    HomeworksDecisionsUpdate:
      type: object
      properties:
        mentor_id:
          type: integer
          description: Уникальный идентификатор ментора
        assessment:
          description: Оценка от ментора
          example: 90
          type: integer
          minimum: 1
        commentary:
          description: Комментарий по решению от ментора
          example: Отлично!
          type: string
      required:
        - link
      x-stoplight:
        id: h2fwug6nfg0al
    LigaSecurityRequests:
      type: object
      properties:
        username:
          type: string
          description: Уникальный идентификатор cтажера
          example: '79000000000'
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
      required:
        - id
        - traineeship_id
      x-stoplight:
        id: yece66j8hcs3b
    LigaSecurityResponses:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор кандидата
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
        status:
          type: string
          description: Cтатус проверки
          example: Проверка пройдена успешно
        description:
          type: string
          description: Комментарий от СБ
      required:
        - id
        - traineeship_id
        - status
      x-stoplight:
        id: c6z3zc7wyy75y
    HrRequests:
      type: object
      properties:
        username:
          type: string
          description: Уникальный идентификатор cтажера
          example: '79000000000'
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
      required:
        - id
        - traineeship_id
      x-stoplight:
        id: mrz4xw214e7py
    TraineeshipsCreate:
      type: object
      properties:
        title:
          type: string
          description: Заголовок стажировки
          example: Стажировка по SA
        duration:
          type: string
          description: Длительность стажировки
          example: 6 недель
        start:
          type: string
          description: Дата начала стажировки
          example: '2023-10-01'
          format: date
        description:
          type: string
          description: Описание стажировки
      required:
        - title
        - duration
        - start
        - name
        - description
        - supervisor_id
      x-stoplight:
        id: 5uzbvfh5svfwb
    TraineeshipsCreateUpdate:
      type: object
      properties:
        supervisor_id:
          type: integer
          description: Уникальный идентификатор руководителя стажировки
          example: 1
      required:
        - supervisor_id
      x-stoplight:
        id: cxk1fbzh8qlmh
    CustomUserCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Уникальный юзернейм в виде номера телефона
          pattern: '^(7+([0-9]){10})$'
          maxLength: 15
          example: '79000000000'
      required:
        - username
      x-stoplight:
        id: 5zlvhlsyx24rm
    TokenCreate:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      x-stoplight:
        id: 87jsushhw9gln
    TokenGetResponse:
      type: object
      properties:
        token:
          type: string
          example: token
        expires_in:
          type: integer
          example: 86400
        token_type:
          type: string
          example: bearer
      x-stoplight:
        id: sj4h2a63eqnvi
    ValidationError:
      description: Стандартные ошибки валидации JSF
      type: object
      properties:
        username:
          description: 'Название поля, в котором произошли ошибки. Таких полей может быть несколько'
          example:
            - Обязательное поле.
          type: array
          items:
            type: string
      x-stoplight:
        id: 66ex15hxidak9
    NestedValidationError:
      description: Стандартные ошибки валидации JSF
      type: object
      properties:
        assessment:
          description: Ошибка оценки.
          example: 'Убедитесь, что это значение больше либо равно 1.'
          type: string
      x-stoplight:
        id: bfxuy4tzezvl0
    SelfMadeError:
      description: Ошибка
      type: object
      properties:
        errors:
          description: Описание ошибки
          type: string
      x-stoplight:
        id: mkoi8ujjsyymy
    AuthenticationError:
      description: Пользователь не авторизован
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: Учетные данные не были предоставлены.
          type: string
      x-stoplight:
        id: 8t70pzu49aole
    PermissionDenied:
      description: Недостаточно прав
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: У вас недостаточно прав для выполнения данного действия.
          type: string
      x-stoplight:
        id: 5l7lujckx4q0o
    NotFound:
      description: Объект не найден
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: Страница не найдена.
          type: string
      x-stoplight:
        id: o3wr7ilpq86z5
    ConflictError:
      description: Данный ресурс уже существует
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: Вы уже отправляли запрос.
          type: string
      x-stoplight:
        id: 1wwsxrj6noytq
  responses:
    ValidationError:
      description: Ошибки валидации в стандартном формате JSF
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    ConflictError:
      description: Даннный объект уже существует
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    AnnouncementsValidationError:
      description: Данный запрос не может быть обработан
      content:
        application/json:
          schema:
            description: Стандартные ошибки валидации JSF
            type: object
            properties:
              block:
                description: 'Название поля, в котором произошли ошибки. Таких полей может быть несколько'
                example:
                  - Блок "form" с id "668483038" содержит недопустимые значения
                type: array
                items:
                  type: string
    NestedValidationError:
      description: 'Ошибки валидации в стандартном формате JSF, в том числе с внутренними элементами.'
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/NestedValidationError'
              - $ref: '#/components/schemas/ValidationError'
    AuthenticationError:
      description: Пользователь не авторизован
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'
    PermissionDenied:
      description: Недостаточно прав
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionDenied'
    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
  securitySchemes:
    Token:
      description: 'Авторизация по токену. <br> Все запросы от имени пользователя должны выполняться с заголовком "Authorization: Token TOKENVALUE"'
      type: http
      scheme: bearer
      bearerFormat: JWT
