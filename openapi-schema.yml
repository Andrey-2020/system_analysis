openapi: 3.0.0
info:
  title: Traineeship system
  version: 1.0.0
paths:
  /api/users:
    get:
      summary: Получение списка пользователей
      operationId: Список пользователей
      description: 'Выдача всех пользователей для отображения на странице поиска. Доступно ментору, руководителю стажировки и администратору.'
      parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
        - name: filter
          required: false
          in: query
          description: Показывать пользователей с указанным ФИО
          schema:
            type: string
      security:
        - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResultList'
          description: Список пользователей
        '400':
          description: 'В запросе есть ошибка (Например, если filter содержит недопустимые данные)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - 'Поле filter не соответствует pattern \A[а-яА-Я]\z'
                      - При установке флага filter=true поле filter должно быть задано
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
    post:
      summary: Регистрация кандидата в системе
      operationId: Регистрация пользователя
      description: Администратор регистрирует кандидата в системе.
      parameters: []
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserCreate'
          description: Пользователь успешно создан
        '400':
          description: 'В запросе есть ошибка (Например, если filter содержит недопустимые данные)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Поле phone_number обязательное
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
  /api/users/me:
    get:
      summary: Текущий пользователь
      operationId: Текущий пользователь
      description: Получение профиля текущего пользователя для отображения на странице
      parameters: []
      security:
        - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserInfo'
                  - $ref: '#/components/schemas/UserRoleList'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
  /api/users/candidates:
    get:
      summary: Список кандидатов на стажировку
      operationId: Все кандидаты
      description: 'Получение списка кандидатов на стажировку, отфильтрованного по id стажировки. Доступен ментору и администратору.'
      parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
        - name: traineeship_id
          required: true
          in: query
          description: Уникальный идентификатор стажировки. Нужен для фильтрации.
          schema:
            type: string
      security:
        - Token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDecisionList'
              examples:
                Example 1:
                  value:
                    count: 100
                    results:
                      - info:
                          id: 0
                          phone_number: '79000000000'
                          first_name: Вася
                          last_name: Пупкин
                          middle_name: Алибабаевич
                          address: string
                          birthday: '2009-06-06'
                          email: user@example.com
                        tasks:
                          - id: 0
                            username: string
                            traineeship_id: 0
                            question_id: 0
                            answer_text/link: 'https://docs.google.com/document/u/0/'
                        status_from_supervisor:
                          status: NONE
                          description: NONE
                        status_from_SS:
                          status: NONE
                          description: None
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
  '/api/users/candidates/{id}/status':
    patch:
      summary: Обновление статуса кандидата
      operationId: Добавить статус от руководителя стажировки
      description: Добавление статуса кандидату (query parameters - username) по итогам проверки вступительного задания и ознакомления с информацией о кандидате. Доступно только руководителю стажировки.
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера.
          schema:
            type: string
      security:
        - Token: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FormDecisionUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/FormDecision'
              examples:
                Example 1:
                  value:
                    info:
                      id: 0
                      phone_number: '79000000000'
                      first_name: Вася
                      last_name: Пупкин
                      middle_name: Алибабаевич
                      address: string
                      birthday: '2009-06-06'
                      email: user@example.com
                    tasks:
                      - id: 0
                        username: string
                        traineeship_id: 0
                        question_id: 0
                        answer_text/link: 'https://docs.google.com/document/u/0/'
                    status_from_supervisor:
                      status: APPROVED
                      description: Все отлично!
                    status_from_SS:
                      status: NONE
                      description: None
          description: Статус кандидата успешно обновлен
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
  '/api/users/{id}':
    get:
      summary: Получение профиля
      operationId: Профиль пользователя
      description: Получение профиля пользователя по id. Доступно только авторизованным пользователям
      security:
        - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный id этого пользователя
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
  '/api/users/{id}/role':
    post:
      summary: Добавить пользователю роль
      operationId: Роль
      description: Доступно только руководителю стажировки и администратору. Администратор назначает руководителя стажировки. Руководитель стажировки назначает стажеров и менторов на свою стажировку
      security:
        - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор пользователя.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                traineeship_id:
                  type: integer
                  description: Уникальный идентификатор стажировки
                role:
                  type: string
                  description: Роль пользователя
                  example: INTERN
                  enum:
                    - INTERN
                    - MENTOR
                    - INTERNSHIP SUPERVISOR
                    - ADMIN
              required:
                - traineeship_id
                - role
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserInfo'
                  - $ref: '#/components/schemas/UserRoleList'
          description: Роль пользователя успешно добавлена в БД
        '400':
          description: 'Ошибка назначения роли (Например, если роль уже назначена)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Управление стажерами и менторами
  '/api/users/{id}/matching':
    post:
      summary: Назначить стажера под конкретного ментора
      operationId: Назначить стажеру ментора
      description: Назначение стажера под конкретного ментора доступно только руководителю стажировки
      security:
        - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternWithMentor'
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/UserInfo'
                  - $ref: '#/components/schemas/UserRoleList'
                  - $ref: '#/components/schemas/InternWithMentorList'
          description: Курирующий стажера ментор успешно добавлен в БД
        '400':
          description: 'Ошибка назначения ментора (Например, если стажеру для данной стажировки уже назначен ментор)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Стажеру для данной стажировки уже назначен ментор
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Управление стажерами и менторами
  /api/projects:
    get:
      summary: 'Все шаблоны лендингов, форм и программ стажировок'
      operationId: Конструктор
      description: Получение и просмотр шаблонов проектов. Получение шаблонов анонсов и программ стажировок доступно только администратору. Получение шаблонов форм также разрешено руководителю стажировки и ментору.
      security:
        - Token: []
      parameters:
        - name: purpose
          required: false
          in: query
          description: 'Цель использования конструктора. Создание формы, анонса или программы стажировки?'
          schema:
            type: string
            enum:
              - ONLY FORM
              - ANNOUNCEMENT
              - TRAINEESHIP PROGRAM
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatePreviewList'
          description: Все шаблоны страницы
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Конструктор
  '/api/projects/{project_id}':
    get:
      summary: Получить шаблон проекта
      operationId: Шаблон проекта
      description: Получение конкретного шаблона анонса или программы стажировки доступно только администратору. Получение шаблона формы также разрешено руководителю стажировки и ментору.
      security:
        - Token: []
      parameters:
        - name: purpose
          required: true
          in: query
          description: 'Цель использования конструктора. Создание формы, анонса или программы стажировки?'
          schema:
            type: string
            enum:
              - ONLY FORM
              - ANNOUNCEMENT
              - TRAINEESHIP PROGRAM
        - name: project_id
          in: path
          required: true
          description: Уникальный идентификатор проекта
          schema:
            type: integer
        - name: addnewpage
          required: false
          in: query
          description: Создать новую страницу?
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: 'Сообщение содержит HTML-разметку, а также необходимые библиотеки CSS-стилей и библиотеки JS-модулей.'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Конструктор
    post:
      summary: 'Создать анонс, форму или программу стажировки'
      operationId: Создать анонс стажировки
      description: 'Создание конкретного шаблона анонса, программы стажировки, формы. Разрешения для пользователей как при GET-запросе.'
      security:
        - Token: []
      parameters:
        - name: purpose
          required: true
          in: query
          description: 'Цель использования конструктора. Создание формы, анонса или программы стажировки?'
          schema:
            type: string
            enum:
              - ONLY FORM
              - ANNOUNCEMENT
              - TRAINEESHIP PROGRAM
        - name: project_id
          in: path
          required: true
          description: Уникальный идентификатор проекта
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProject'
            examples:
              Example 1:
                value:
                  template_id: 0
                  title: Стажировка по системной аналитике
                  blocks:
                    - 'sorts[0]':
                        block_id: '668483038'
                        changes:
                          - only_this_field: title
                            element_info: Новый заголовок формы
                    - 'sorts[1]':
                        block_id: '668482970'
                        changes:
                          - only_this_field: li_title_1
                            element_info: E-mail
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementsResponseOnCreate'
          description: ' Анонс стажировки успешно создан. Данный пример показывает ответ на запрос с параметром purpose = "Анонс". В сообщении содержится ссылка на лендинг.'
        '400':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Блок form с id '668483038' содержит недопустимые значения
          description: Невозможно обработать запрос
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Конструктор
  '/api/announcements/{id}':
    get:
      summary: Получение страницы анонса стажировки
      operationId: Получение лендинга
      description: Получение страницы анонса стажировки для отправки заявки
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор анонса
          schema:
            type: string
      responses:
        '200':
          content:
            application/xhtml+xml:
              schema:
                type: object
                properties: {}
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: 'Получена страница анонса, сформированная по шаблону'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Анонсы
    post:
      summary: Отправка заявки на стажировку
      operationId: Отклик
      description: Отклик на стажировку путем заполнения и отправки формы на сайте
      parameters:
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор анонса
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UserInfo'
                - $ref: '#/components/schemas/IntroductoryTasks'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Уникальный юзернейм
                    pattern: '^(7+([0-9]){10})$'
                    maxLength: 15
                    example: '79000000000'
                  message:
                    type: string
                    description: Уведомление
                    example: Ваш отклик успешно зарегистрирован
          description: Отклик успешно отправлен
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Анонсы
  '/api/traineeships/{traineeship_id}/lectures':
    get:
      summary: Получить все лекции
      operationId: Список лекций
      description: 'Список всех лекций для конкретной стажировки. Доступно стажеру, ментору, руководителю стажировки. Стажер по атрибуту date_lecture может узнать, когда следующая лекция.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureList'
          description: Список лекций
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Лекции
    post:
      summary: Создать новую лекцию
      operationId: Создание лекции
      description: Создание лекций доступно только руководителю стажировки. Дополнить её информацией может и ментор.
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLecture'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureMinified'
          description: Лекция успешно создана
        '400':
          description: Ошибки валидации в стандартном формате
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ValidationError'
                example:
                  name:
                    - Обязательное поле.
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Лекции
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}':
    get:
      summary: Зайти в карточку лекции
      operationId: Получение лекции
      description: 'Перейти в карточку лекции для просмотра материалов. Доступно стажеру, ментору, руководителю стажировки, администратору.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecture'
          description: ''
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Лекции
    patch:
      summary: Обновить информацию в лекции
      operationId: Обновление лекции
      security:
        - Token: []
      description: Обновление/Добавление материалов лекции. Доступно только руководителю стажировки и ментору
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LecturesUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lecture'
          description: Лекция успешно обновлена
        '400':
          description: Ошибки валидации в стандартном формате
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Поле link_presentation не соответствует pattern url
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Лекции
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks':
    get:
      summary: Получить все домашние задания для данной лекции
      operationId: Список ДЗ
      description: 'Получить все задачи для определенной стажировки. Доступно стажерам, менторам, руководителю стажировки и администратору.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
      responses:
        '200':
          description: Список задач успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworksWithLecture'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Домашние задания
    post:
      summary: Создать ДЗ
      operationId: Создать ДЗ
      description: 'Создать домашнее задание. Доступно только руководителю стажировки, ментору и администратору.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHomeworks'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ДЗ успешно создано
        '400':
          description: 'Ошибка добавления ДЗ к лекции (Например, когда такое ДЗ в лекции уже существует)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Данное ДЗ уже создано
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Домашние задания
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks/{id}':
    get:
      summary: Получить конкретное ДЗ
      operationId: ДЗ
      description: 'Получить ДЗ по его id. Доступно стажеру, ментору, руководителю стажировки.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
      responses:
        '200':
          description: ДЗ успешно получено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Домашние задания
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks/{homework_id}/decisions':
    post:
      summary: Прикрепить решение к ДЗ
      operationId: Отправка решения ДЗ
      description: Отправить решение ДЗ на проверку. Стажер отправляет ссылку на гугл-документ с решением. Доступно только стажеру.
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: homework_id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHomeworkDecision'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkDecisions'
          description: ДЗ успешно отправлено на проверку
        '400':
          description: 'Ошибка добавления ДЗ (Например, когда ДЗ уже отправлено)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Решение ДЗ уже отправлено
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Домашние задания
  '/api/traineeships/{traineeship_id}/lectures/{lecture_id}/homeworks/{homework_id}/decisions/{id}':
    get:
      summary: Просмотреть решение ДЗ
      operationId: Решение
      description: 'Просмотреть решение домашнего задания конкретного стажера. Доступно только автору решения, руководителю стажировки и менторам.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: homework_id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера (username).
          schema:
            type: string
      responses:
        '200':
          description: Решение ДЗ получено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeworkDecisions'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Домашние задания
    patch:
      summary: Добавить оценку решения ДЗ
      operationId: Add_assessment
      description: Добавление комментария и оценки домашнего задания стажера. Доступно только ментору и руководителю стажировки.
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: lecture_id
          in: path
          required: true
          description: Уникальный идентификатор лекции.
          schema:
            type: string
        - name: homework_id
          in: path
          required: true
          description: Уникальный идентификатор ДЗ.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера (username).
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHomeworkDecision'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/HomeworkDecisions'
                  - $ref: '#/components/schemas/UpdateHomeworkDecision'
          description: Оценка ДЗ стажера успешно добавлена
        '400':
          description: Ошибки валидации в стандартном формате
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - 'Убедитесь, что значение поля assessment больше либо равно 1'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Домашние задания
  /api/traineeships/liga-security:
    get:
      summary: 'Запросить кандидатов, проверенных в СБ'
      operationId: Запросить статусы
      security:
        - Token: []
      description: Получить статусы проверки кандидатов в СБ. Доступно только администратору. Необходимо для принятия окончательного решения.
      parameters:
        - name: traineeship_id
          in: query
          required: false
          description: Уникальный идентификатор стажировки для фильтрации.
          schema:
            type: string
      responses:
        '200':
          description: Список со статусами кандидатов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDecisionList'
              examples:
                Example 1:
                  value:
                    count: 100
                    results:
                      - info:
                          id: 0
                          phone_number: '79000000000'
                          first_name: Вася
                          last_name: Пупкин
                          middle_name: Алибабаевич
                          address: string
                          birthday: '2009-06-06'
                          email: user@example.com
                        tasks:
                          - id: 0
                            username: string
                            traineeship_id: 0
                            question_id: 0
                            answer_text/link: 'https://docs.google.com/document/u/0/'
                        status_from_supervisor:
                          status: APPROVED
                          description: Все отлично!
                        status_from_SS:
                          status: REJECTED
                          description: Отклонен
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Служба безопасности
    post:
      summary: Отправить кандидата в СБ
      operationId: Отправить кандидата в СБ
      description: Отправить кандидата на проверку в СБ. Доступно только администратору.
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LigaSecurityRequests'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDecisionList'
              examples:
                Example 1:
                  value:
                    count: 100
                    results:
                      - info:
                          id: 0
                          phone_number: '79000000000'
                          first_name: Вася
                          last_name: Пупкин
                          middle_name: Алибабаевич
                          address: string
                          birthday: '2009-06-06'
                          email: user@example.com
                        tasks:
                          - id: 0
                            username: string
                            traineeship_id: 0
                            question_id: 0
                            answer_text/link: 'https://docs.google.com/document/u/0/'
                        status_from_supervisor:
                          status: APPROVED
                          description: Все отлично!
                        status_from_SS:
                          status: PENDING
                          description: На проверке .....
          description: Информация о кандидате успешно отправлена в СБ
        '400':
          description: 'Ошибка отправки (Например, когда информация о кандидате уже отправлена в СБ)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Данный пользователь уже отправлен на проверку в СБ
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Служба безопасности
  /api/traineeships/hr/employees:
    post:
      summary: Отправить информацию о стажере в HR
      operationId: HR
      description: 'Отправить информацию в HR о стажере, которого нужно взять в штат. Доступно только руководителю стажировки.'
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HrRequests'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
                example: Информация о стажере отправлена на оформление в HR...
                description: Ответ от сервера
          description: Информация о стажере успешно отправлена в HR
        '400':
          description: 'Ошибка передачи информации о стажере (Например, если запрос уже отправили)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - Данный пользователь уже отправлен на проверку
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - HR
  /api/traineeships:
    post:
      summary: Создать стажировку
      operationId: Создание стажировки
      description: Создание стажировки доступно только администратору
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTraineeship'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
                example: 'Новая стажировка с названием "{title}" создана'
                description: Ответ от сервера
          description: Стажировка успешно создана
        '400':
          description: Ошибки валидации в стандартном формате
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - 'Поле title не соответствует pattern \A[а-яА-Я]\z'
                      - 'Поле start не соответствует pattern [0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])'
                      - 'Убедитесь, что значение поля duration больше либо равно 1'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Стажировка
  '/api/traineeships/{traineeship_id}':
    patch:
      summary: Добавить руководителя стажировки
      operationId: Назначение руководителя
      description: После создания стажировки администратор должен назначить руководителя через поиск по ФИО. После чего id нового администратора добавляется в таблицу с информацией по стажировкам
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTraineeship'
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CreateTraineeship'
                  - $ref: '#/components/schemas/UpdateTraineeship'
          description: Руководитель стажировки успешно добавлен
        '400':
          description: 'Ошибка назначения (Например, если id руководителя не существует)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - 'ID, указанный в supervisor_id, не существует.'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Стажировка
  '/api/traineeships/{traineeship_id}/results':
    get:
      summary: Получение списка стажеров для стажировки traineeship_id
      operationId: Получить список
      description: 'В списке стажеров руководитель стажировки может ознакомиться с информацией о конкретном стажере, нажав на его карточку.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
      responses:
        '200':
          description: Список стажеров для формирования отчетности получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResultList'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Стажировка
    post:
      summary: Сформировать заключение о стажере
      operationId: Создание заключение
      description: Форма для написания заключения о своем стажере. Доступно только ментору
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResults'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternCard'
              examples:
                Example 1:
                  value:
                    info:
                      id: 0
                      phone_number: '79000000000'
                      first_name: Вася
                      last_name: Пупкин
                      middle_name: Алибабаевич
                      address: string
                      birthday: '2009-06-06'
                      email: user@example.com
                    homeworks:
                      - id: 0
                        username: string
                        traineeship_id: 0
                        homework_id: 0
                        link: 'https://docs.google.com/document/u/0/'
                        mentor_id: 0
                        assessment: 90
                        commentary: Отлично!
                    mentor_id: 0
                    final_feedback: Рекомендую на трудоустройство
          description: Заключение успешно сформировано
        '400':
          description: Ошибки валидации в стандартном формате
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                Example 1:
                  value:
                    fields:
                      - 'Поле title не соответствует pattern \A[а-яА-Я]\z'
                      - 'Поле start не соответствует pattern [0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])'
                      - 'Убедитесь, что значение поля duration больше либо равно 1'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Стажировка
  '/api/traineeships/{traineeship_id}/results/{id}':
    get:
      summary: Карточка стажера
      operationId: Карточка стажера
      description: 'В карточке стажера руководитель стажировки может ознакомиться с историчностью выполнения домашних заданий, оценками, комментариями и обратной связью от менторов. Карточка стажера содержит результат прохождения стажировки'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажера.
          schema:
            type: string
      responses:
        '200':
          description: Информация с результатами прохождения стажировки для принятия решения о найме получена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternCard'
              examples:
                Example 1:
                  value:
                    info:
                      id: 0
                      phone_number: '79000000000'
                      first_name: Вася
                      last_name: Пупкин
                      middle_name: Алибабаевич
                      address: string
                      birthday: '2009-06-06'
                      email: user@example.com
                    homeworks:
                      - id: 0
                        username: string
                        traineeship_id: 0
                        homework_id: 0
                        link: 'https://docs.google.com/document/u/0/'
                        mentor_id: 0
                        assessment: 90
                        commentary: Отлично!
                    mentor_id: 0
                    final_feedback: Рекомендую на трудоустройство
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Стажировка
  '/api/traineeships/{traineeship_id}/programs/{id}':
    get:
      summary: Скачать программу стажировки
      operationId: Скачать программу
      description: 'Скачать файл с программой стажировки. Это может быть TXT/PDF/CSV. Доступно стажерам, менторам, руководителю стажировки и админам.'
      security:
        - Token: []
      parameters:
        - name: traineeship_id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Уникальный идентификатор стажировки.
          schema:
            type: string
      responses:
        '200':
          description: Файл скачен
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Стажировка
  /api/auth/token/login:
    post:
      summary: Получить токен авторизации
      operationId: Получить токен авторизации
      description: 'Используется для авторизации по username и паролю, чтобы далее использовать токен при запросах.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenGetResponse'
          description: Вход выполнен
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
  /api/auth/token/logout:
    post:
      summary: Удаление токена
      operationId: Удаление токена
      description: Удаляет токен текущего пользователя
      security:
        - Token: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Пользователи
components:
  schemas:
    UserInfo:
      description: Полные данные пользователя (в том числе кандидата на стажировку)
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          description: Номера телефона
          pattern: '^(7+([0-9]){10})$'
          example: '79000000000'
          maxLength: 15
        first_name:
          type: string
          maxLength: 150
          description: Имя
          example: Вася
        last_name:
          type: string
          maxLength: 150
          description: Фамилия
          example: Пупкин
        middle_name:
          type: string
          maxLength: 150
          description: Отчество
          example: Алибабаевич
        address:
          type: string
          description: Прописка
        birthday:
          type: string
          description: Дата рождения
          example: '2009-06-06'
          format: date
        email:
          type: string
          format: email
          maxLength: 254
          description: Адрес электронной почты
      required:
        - phone_number
        - first_name
        - last_name
        - middle_name
        - address
        - birthday
        - email
    UserRoleList:
      description: Список ролей пользователя в различных стажировках
      type: object
      properties:
        roles:
          type: array
          description: Список ролей пользователя в различных стажировках
          items:
            type: object
            properties:
              traineeship_id:
                type: integer
                description: Уникальный идентификатор стажировки
              role:
                description: Роль пользователя в системе
                example: INTERN
                enum:
                  - INTERN
                  - MENTOR
                  - INTERNSHIP SUPERVISOR
                  - ADMIN
      required:
        - roles
    UserSearchResult:
      description: Пользователь из БД AD
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          description: Номера телефона
          pattern: '^(7+([0-9]){10})$'
          maxLength: 15
        first_name:
          type: string
          maxLength: 150
          description: Имя
          example: Вася
        last_name:
          type: string
          maxLength: 150
          description: Фамилия
          example: Пупкин
        middle_name:
          type: string
          maxLength: 150
          description: Отчество
          example: Алибабаевич
      required:
        - username
    UserSearchResultList:
      type: object
      description: 'Список пользователей с БД, удовлетворяющих запросу'
      properties:
        count:
          type: integer
          example: 123
          description: Общее количество объектов в базе
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserSearchResult'
          description: Список объектов текущей страницы
    IntroductoryTasks:
      description: Решение вступительных задач кандидата на стажировку
      type: object
      properties:
        traineeship_id:
          type: integer
          description: Уникальный id стажировки
        tasks:
          type: array
          description: Список задач
          items:
            type: object
            properties:
              task_id:
                type: integer
                description: Уникальный id задачи
              username:
                type: integer
                description: Уникальный id стажера
              solution:
                type: string
                description: Текстовое описание решения или ссылка на онлайн ресурс с решением
                example: 'https://docs.google.com/document/u/0/'
      required:
        - tasks
    InternWithMentor:
      description: 'Дополнительная информация по стажеру, содержащая его ментора для конкретной стажировки'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: Уникальный id
        username:
          type: integer
          description: Уникальный id стажера
        traineeship_id:
          type: integer
          description: Уникальный id стажировки
        mentor_id:
          type: integer
          description: Уникальный id ментора
      required:
        - username
        - traineeship_id
        - mentor_id
    InternWithMentorList:
      description: 'Список всех менторов стажера, сгруппированных по его стажировкам (подгружать эту информацию как lazy load)'
      type: object
      properties:
        mentors:
          type: array
          description: Список соответствий стажировка - ментор для конкретного стажера
          items:
            $ref: '#/components/schemas/InternWithMentor'
      required:
        - username
    TemplatePreviewList:
      type: object
      description: Предпросмотр шаблонов для выбора
      properties:
        count:
          type: integer
          description: Количество шаблонов
        templates:
          type: array
          description: Список шаблонов
          items:
            type: object
            properties:
              template_id:
                type: integer
                description: Уникальный id шаблона
              image_ling:
                type: string
                description: Ссылка на изобращение шаблона
                example: 'http://internship.example.org/static/example.jpg'
                format: url
              text:
                description: Описание
                type: string
      required:
        - count
        - templates
    Template:
      type: object
      description: 'Шаблон проекта, содержащий его разметку'
      properties:
        template_id:
          type: integer
          description: Уникальный id шаблона
        html:
          type: string
          description: HTML верстка страницы
          example: <div class="form" >foo-bar</div>
        css-libs:
          type: string
          description: Стиль CSS страницы
          example: test-forms-1.0.css
        js-libs:
          type: string
          description: Скрипт JS для HTML страницы
          example: test-forms-1.0.js
      required:
        - count
        - template
    CreateProject:
      type: object
      description: 'Модель для создания проекта (например, анонса) по готовым дизайн блокам из библиотеки. Блок - обложка, заголовок, текстовый блок, изображение и так далее'
      properties:
        template_id:
          type: integer
          description: Уникальный идентификатор шаблона
        title:
          type: string
          description: Заголовок
          example: Стажировка по системной аналитике
        blocks:
          type: array
          description: 'Список блоков, сохраняющий определенный порядок.'
          items:
            type: object
            description: 'Дизайн блок. Цифра в [ ] отвечает за место отображения на странице'
            properties:
              'sorts[0]':
                type: object
                description: 'sorts[0] обозначает первый блок на странице'
                properties:
                  block_id:
                    type: string
                    description: Уникальный идентификатор блока
                    example: '668483038'
                  changes:
                    type: array
                    description: Список всех изменений в дизайн блоке
                    items:
                      type: object
                      description: Элементы блока block_id
                      properties:
                        only_this_field:
                          type: string
                          description: Уникальный идентификатор элемента блока
                          example: title
                        element_info:
                          type: string
                          description: Измененный текст элемента блока
                          example: Новый заголовок формы
      required:
        - template_id
        - title
        - blocks
    AnnouncementsResponseOnCreate:
      type: object
      description: Ответ сервера при создании анонса
      properties:
        project_id:
          type: integer
          description: Уникальный идентификатор анонса
        link:
          type: string
          description: Ссылка на лендинг
          example: 'http://internship.example.org/api/announcements/123/'
          format: url
        publish_onepage:
          type: boolean
          description: Страница уже опубликована в открытом доступе?
          example: true
      required:
        - project_id
        - link
        - publish_onepage
    CreateLecture:
      description: 'Объект, содержащий информацию для создания лекции'
      type: object
      properties:
        name:
          type: string
          maxLength: 200
          description: Название лекции
        date_lecture:
          description: Дата проведения лекции по расписанию
          type: string
          example: '2023-11-17'
          format: date
      required:
        - name
        - date_lecture
    LectureMinified:
      type: object
      description: Первичная краткая информация о лекции (сразу после её создания)
      properties:
        id:
          type: integer
          readOnly: true
          description: Уникальный id
        name:
          type: string
          maxLength: 200
          description: Название лекции
        date_lecture:
          description: Дата проведения лекции по расписанию
          type: string
          example: '2023-11-17'
          format: date
      required:
        - name
        - date_lecture
    Lecture:
      type: object
      description: 'Полная информация о лекции, содержащая название, дату проведения, ссылку на презентацию и запись.'
      properties:
        id:
          type: integer
          readOnly: true
          description: Уникальный id
        name:
          type: string
          maxLength: 200
          description: Название лекции
        image:
          description: Ссылка на картинку на сайте
          example: 'http://internship.example.org/media/lectures/images/image.jpeg'
          type: string
          format: url
        link_presentation:
          description: Ссылка на презентацию
          example: 'http://internship.example.org/media/lectures/images/presentation.jpeg'
          type: string
          format: url
        link_record:
          description: Ссылка на запись лекции
          example: 'http://internship.example.org/media/lectures/images/record.jpeg'
          type: string
          format: url
        homework_id:
          description: Внешний ключ id для связи с домашней работой
          type: integer
          example: 2
        date_lecture:
          description: Дата проведения лекции по расписанию
          type: string
          example: '2023-11-17'
          format: date
      required:
        - name
        - link_presentation
        - link_record
        - homework_id
        - date_lecture
    LectureList:
      type: array
      description: Список лекций
      items:
        $ref: '#/components/schemas/Lecture'
    LecturesUpdate:
      type: object
      description: Дополнительная информация лекции
      properties:
        image:
          description: Ссылка на картинку на сайте
          example: 'http://internship.example.org/media/lectures/images/image.jpeg'
          type: string
          format: url
        link_presentation:
          description: Ссылка на презентацию
          example: 'http://internship.example.org/media/lectures/images/presentation.jpeg'
          type: string
          format: url
        link_record:
          description: Ссылка на запись лекции
          example: 'http://internship.example.org/media/lectures/images/record.jpeg'
          type: string
          format: url
        homework_id:
          description: Внешний ключ id для связи с домашней работой
          type: integer
          example: 2
      required:
        - image
        - link_presentation
        - link_record
        - homework_id
    Homework:
      type: object
      description: Информация о домашнем задании
      properties:
        id:
          type: integer
          readOnly: true
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
        lecture_id:
          type: integer
          description: Уникальный идентификатор лекции
        image:
          description: Ссылка на картинку для ДЗ
          example: 'http://internship.example.org/media/lectures/images/DZ.jpeg'
          type: string
          format: url
        condition:
          type: string
          description: Текст вопроса ДЗ
          example: Помогает ли капуста от облысения?
      required:
        - title
        - traineeship_id
        - lecture_id
        - image
        - condition
    HomeworksWithLecture:
      type: object
      description: Список домашних задач для данной лекции
      properties:
        count:
          type: integer
          description: Количество задач
        title:
          type: string
          maxLength: 200
          description: Заголовок
          example: Заголовок группы ДЗ
        description_text:
          type: string
          description: Описание
          example: Описание
        lecture_id:
          type: integer
          description: Уникальный идентификатор лекции
        homeworks:
          type: array
          description: Задачи
          items:
            $ref: '#/components/schemas/Homework'
      required:
        - count
        - title
        - description_text
        - homeworks
    CreateHomeworks:
      type: object
      description: Создание ДЗ
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
          example: Капуста
        description_text:
          type: string
          description: Описание ДЗ
          example: Овощ
        homework_list:
          type: array
          description: Список с задачами
          items:
            type: object
            properties:
              image:
                description: Ссылка на картинку для ДЗ
                example: 'http://internship.example.org/media/lectures/images/DZ.jpeg'
                type: string
                format: url
              condition:
                type: string
                description: Текст вопроса ДЗ
                example: Помогает ли капуста от облысения?
              number:
                type: integer
                description: Номер вопроса
                example: 1
            required:
              - condition
              - number
      required:
        - title
        - description_text
        - homework_list
    HomeworkDecisions:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Уникальный идентификатор стажера
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
        homework_id:
          type: integer
          description: Уникальный идентификатор ДЗ
        link:
          description: Ссылка на решения ДЗ
          example: 'https://docs.google.com/document/u/0/'
          type: string
          format: url
      required:
        - username
        - traineeship_id
        - homework_id
        - link
    FormDecision:
      type: object
      description: 'Вся информация о кандидате, включая его решения вступительных задач, предоставляется для принятия решений руководителем стажировки и администратором'
      properties:
        info:
          $ref: '#/components/schemas/UserInfo'
        tasks:
          type: array
          description: Список ответов кандидата
          items:
            properties:
              id:
                type: integer
                readOnly: true
              username:
                type: string
                description: Уникальный идентификатор стажера
              traineeship_id:
                type: integer
                description: Уникальный идентификатор стажировки
              question_id:
                type: integer
                description: Уникальный идентификатор вопроса формы
              answer_text/link:
                description: Текстовый ответ или ссылка на решение
                example: 'https://docs.google.com/document/u/0/'
                type: string
            required:
              - username
              - traineeship_id
              - question_id
              - answer_text/link
        status_from_supervisor:
          $ref: '#/components/schemas/FormDecisionUpdate'
        status_from_SS:
          $ref: '#/components/schemas/LigaSecurityResponses'
      required:
        - info
        - tasks
        - status_from_supervisor
        - status_from_SS
    FormDecisionUpdate:
      type: object
      description: Добавить результат проверки кандидата руководителем стажировки
      properties:
        status:
          type: string
          description: Статус  проверки кандидата от руководителя стажировки
          example: APPROVED
          enum:
            - APPROVED
            - REJECTED
            - PENDING
            - NONE
        description:
          type: string
          description: Комментарий от руководителя стажировки
          example: Все отлично!
      required:
        - status
        - description
    FormDecisionList:
      type: object
      description: Список кандидатов на стажировку
      properties:
        count:
          type: integer
          example: 100
          description: Общее количество объектов в базе
        results:
          type: array
          items:
            $ref: '#/components/schemas/FormDecision'
          description: Список объектов текущей страницы
      required:
        - count
        - results
    CreateHomeworkDecision:
      type: object
      description: Добавить решение ДЗ
      properties:
        username:
          type: string
          description: Уникальный идентификатор стажера
          example: '79000000000'
        link:
          description: Ссылка на решения ДЗ
          example: 'https://docs.google.com/document/u/0/'
          type: string
          format: url
      required:
        - username
        - link
    UpdateHomeworkDecision:
      type: object
      description: 'Ментор обновляет информацию в домашнем задании стажера, отправляя оценку и комментарий.'
      properties:
        mentor_id:
          type: integer
          description: Уникальный идентификатор ментора
        assessment:
          description: Оценка от ментора
          example: 90
          type: integer
          minimum: 1
        commentary:
          description: Комментарий по решению ДЗ от ментора
          example: Отлично!
          type: string
      required:
        - mentor_id
        - assessment
        - commentary
    InternCard:
      type: object
      description: Страница со всей основной информацией о стажере
      properties:
        info:
          $ref: '#/components/schemas/UserInfo'
        homeworks:
          description: 'Историчность выполнения, оценки и комментарии к ДЗ'
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/HomeworkDecisions'
              - $ref: '#/components/schemas/UpdateHomeworkDecision'
        mentor_id:
          type: integer
          description: 'Уникальный идентификатор ментора, который курировал стажера'
        final_feedback:
          type: string
          description: Финальный отзыв на стажера
          example: Рекомендую на трудоустройство
      required:
        - info
        - homeworks
        - mentor_id
        - final_feedback
    CreateResults:
      type: object
      description: Форма для написания заключения
      properties:
        intern_id:
          type: integer
          description: Уникальный идентификатор стажера
        mentor_id:
          type: integer
          description: 'Уникальный идентификатор ментора, который курировал стажера'
        final_feedback:
          type: string
          description: Финальный отзыв на стажера
          example: Рекомендую на трудоустройство
      required:
        - intern_id
        - mentor_id
        - final_feedback
    LigaSecurityRequests:
      type: object
      description: Проверка кандидата на стажировку в СБ
      properties:
        username:
          type: string
          description: Уникальный идентификатор стажера
          example: '79000000000'
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
      required:
        - username
        - traineeship_id
    LigaSecurityResponses:
      type: object
      description: Схема данных от СБ
      properties:
        status:
          type: string
          description: Статус проверки кандидата от службы безопасности
          example: NONE
          enum:
            - APPROVED
            - REJECTED
            - PENDING
            - NONE
        description:
          type: string
          description: Комментарий от СБ
          example: None
      required:
        - status
        - description
    HrRequests:
      type: object
      description: Запрос в отдел HR на трудоустройство стажера
      properties:
        username:
          type: string
          description: Уникальный идентификатор стажера
          example: '79000000000'
        traineeship_id:
          type: integer
          description: Уникальный идентификатор стажировки
      required:
        - username
        - traineeship_id
    CreateTraineeship:
      type: object
      description: Создание стажировки
      properties:
        title:
          type: string
          description: Заголовок стажировки
          example: Стажировка по SA
        duration:
          type: string
          description: Длительность стажировки
          example: 6 недель
        start:
          type: string
          description: Дата начала стажировки
          example: '2023-10-01'
          format: date
        description:
          type: string
          description: Описание стажировки
      required:
        - title
        - duration
        - start
        - description
    UpdateTraineeship:
      type: object
      description: Добавление руководителя стажировки
      properties:
        supervisor_id:
          type: integer
          description: Уникальный идентификатор руководителя стажировки
          example: 1
      required:
        - supervisor_id
    CustomUserCreate:
      type: object
      description: Регистрация пользователя
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          description: Уникальный юзернейм в виде номера телефона
          pattern: '^(7+([0-9]){10})$'
          maxLength: 15
          example: '79000000000'
      required:
        - username
    TokenCreate:
      description: Модель для получения токена
      type: object
      properties:
        username:
          type: string
          description: Уникальный идентификатор в виде номера телефона
          pattern: '^(7+([0-9]){10})$'
          example: '79000000000'
        password:
          type: string
          description: Пароль
    TokenGetResponse:
      description: Данные для авторизации
      type: object
      properties:
        token:
          type: string
          description: 'Токен, который нам нужно будет отправлять в шапке каждого запроса, для получения данных в ответ'
          example: token
        expires_in:
          type: integer
          description: Время жизни токена в секундах
          example: 86400
        token_type:
          type: string
          description: Тип токена
          example: bearer
    ValidationError:
      description: Стандартные ошибки валидации
      type: object
      properties:
        fields:
          description: 'Название поля, в котором произошли ошибки. Таких полей может быть несколько'
          example:
            - Поле phone_number обязательное
            - 'Поле phone_number не соответствует pattern \^(7+([0-9]){10})$\z'
            - 'Поле firstName не соответствует pattern \A[а-яА-Я]\z'
            - При установке флага someFlat=true поле someField должно быть задано
            - 'Убедитесь, что значение поля assessment больше либо равно 1'
            - Описание ошибки
          type: array
          items:
            type: string
            description: Описание ошибки
    AuthenticationError:
      description: Пользователь не авторизован
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: Учетные данные не были предоставлены.
          type: string
    PermissionDenied:
      description: Недостаточно прав
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: У вас недостаточно прав для выполнения данного действия.
          type: string
    NotFound:
      description: Объект не найден
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: Страница не найдена.
          type: string
    ConflictError:
      description: Данный ресурс уже существует
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: Вы уже отправляли запрос.
          type: string
    InternalServerError:
      title: InternalServerError
      description: Внутренняя ошибка сервера
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: 'Внутри сервера что-то не так, и он не может обработать запрос пользователя.'
          type: string
  responses:
    ValidationError:
      description: Ошибки валидации в стандартном формате
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    ConflictError:
      description: Данный объект уже существует
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    AuthenticationError:
      description: Пользователь не авторизован
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'
    PermissionDenied:
      description: Недостаточно прав
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionDenied'
    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
    InternalServerError:
      description: 'Сервер столкнулся с неожиданной ошибкой, которая помешала ему выполнить запрос.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
  securitySchemes:
    Token:
      description: 'Авторизация по токену. <br> Все запросы от имени пользователя должны выполняться с заголовком "Authorization: Token TOKENVALUE"'
      type: http
      scheme: bearer
      bearerFormat: JWT
